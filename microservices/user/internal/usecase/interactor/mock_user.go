// Code generated by MockGen. DO NOT EDIT.
// Source: user.go

// Package interactor is a generated GoMock package.
package interactor

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/hizzuu/grpc-example-user/internal/domain"
)

// MockUserInteractor is a mock of UserInteractor interface.
type MockUserInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockUserInteractorMockRecorder
}

// MockUserInteractorMockRecorder is the mock recorder for MockUserInteractor.
type MockUserInteractorMockRecorder struct {
	mock *MockUserInteractor
}

// NewMockUserInteractor creates a new mock instance.
func NewMockUserInteractor(ctrl *gomock.Controller) *MockUserInteractor {
	mock := &MockUserInteractor{ctrl: ctrl}
	mock.recorder = &MockUserInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInteractor) EXPECT() *MockUserInteractorMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserInteractor) Create(ctx context.Context, u *domain.User) (*domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, u)
	ret0, _ := ret[0].(*domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUserInteractorMockRecorder) Create(ctx, u interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserInteractor)(nil).Create), ctx, u)
}

// Get mocks base method.
func (m *MockUserInteractor) Get(ctx context.Context, id int64) (*domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(*domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUserInteractorMockRecorder) Get(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUserInteractor)(nil).Get), ctx, id)
}

// GetByEmailAndPassword mocks base method.
func (m *MockUserInteractor) GetByEmailAndPassword(ctx context.Context, email, password string) (*domain.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByEmailAndPassword", ctx, email, password)
	ret0, _ := ret[0].(*domain.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByEmailAndPassword indicates an expected call of GetByEmailAndPassword.
func (mr *MockUserInteractorMockRecorder) GetByEmailAndPassword(ctx, email, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByEmailAndPassword", reflect.TypeOf((*MockUserInteractor)(nil).GetByEmailAndPassword), ctx, email, password)
}
